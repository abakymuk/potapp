/* eslint-env node */
/* eslint-disable no-undef */

import { createClient } from '@supabase/supabase-js'

const url = process.env.SUPABASE_URL
const serviceKey = process.env.SUPABASE_SERVICE_ROLE

if (!url || !serviceKey) {
  console.error('‚ùå SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
  process.exit(1)
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º service role –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const supabase = createClient(url, serviceKey)

async function checkRLS() {
  console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ RLS –ø–æ–ª–∏—Ç–∏–∫...\n')

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ RLS –≤–∫–ª—é—á–µ–Ω –Ω–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ RLS —Å—Ç–∞—Ç—É—Å–∞:')
    const tables = [
      'tenants',
      'users',
      'memberships',
      'sites',
      'menus',
      'items',
      'orders',
      'order_items',
      'events',
    ]

    for (const table of tables) {
      try {
        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        const { error } = await supabase.from(table).select('id').limit(1)

        if (error) {
          console.log(`‚ùå ${table}: ${error.message}`)
        } else {
          console.log(`‚úÖ ${table}: –¥–æ—Å—Ç—É–ø–Ω–∞`)
        }
      } catch (err) {
        console.log(`‚ùå ${table}: ${err.message}`)
      }
    }

    // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')

    // –°–æ–∑–¥–∞–µ–º –¥–≤–∞ —Ç–µ–Ω–∞–Ω—Ç–∞
    const { data: tenant1, error: t1Error } = await supabase
      .from('tenants')
      .insert({ slug: 'test-tenant-1', name: 'Test Tenant 1' })
      .select()
      .single()

    if (t1Error) {
      console.log('‚ö†Ô∏è Tenant 1 —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:', t1Error.message)
    } else {
      console.log('‚úÖ Tenant 1 —Å–æ–∑–¥–∞–Ω:', tenant1.id)
    }

    const { data: tenant2, error: t2Error } = await supabase
      .from('tenants')
      .insert({ slug: 'test-tenant-2', name: 'Test Tenant 2' })
      .select()
      .single()

    if (t2Error) {
      console.log('‚ö†Ô∏è Tenant 2 —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:', t2Error.message)
    } else {
      console.log('‚úÖ Tenant 2 —Å–æ–∑–¥–∞–Ω:', tenant2.id)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ app.*
    console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª—É–∂–µ–±–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:')

    const { error: funcError } = await supabase.rpc('app_current_user_id')

    if (funcError) {
      console.log('‚ö†Ô∏è app.current_user_id():', funcError.message)
    } else {
      console.log('‚úÖ app.current_user_id() –¥–æ—Å—Ç—É–ø–Ω–∞')
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏
    console.log('\nüõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–∏—Ç–∏–∫:')

    const { data: policies, error: polError } = await supabase
      .from('pg_policies')
      .select('schemaname, tablename, policyname')
      .eq('schemaname', 'public')
      .in('tablename', tables)

    if (polError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏:', polError.message)
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${policies.length} –ø–æ–ª–∏—Ç–∏–∫`)
      policies.forEach((p) => {
        console.log(`   - ${p.tablename}.${p.policyname}`)
      })
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º deny-by-default
    console.log('\nüö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ deny-by-default:')

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0)
    const { data: publicData, error: publicError } = await supabase
      .from('tenants')
      .select('id')
      .limit(1)

    if (publicError) {
      console.log('‚úÖ Deny-by-default —Ä–∞–±–æ—Ç–∞–µ—Ç:', publicError.message)
    } else {
      console.log('‚ö†Ô∏è Deny-by-default –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', publicData?.length || 0)
    }

    console.log('\nüéâ RLS –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('1. –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ auth.users')
    console.log('2. –°–æ–∑–¥–∞—Ç—å memberships –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π')
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–æ–ª—è—Ü–∏—é –º–µ–∂–¥—É —Ç–µ–Ω–∞–Ω—Ç–∞–º–∏')
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ —Ä–æ–ª—è–º')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ RLS:', error.message)
    process.exit(1)
  }
}

checkRLS()
