/* eslint-env node */
/* eslint-disable no-undef */

import { createClient } from '@supabase/supabase-js'
import 'dotenv/config'

const url = process.env.SUPABASE_URL
const serviceKey = process.env.SUPABASE_SERVICE_ROLE

if (!url || !serviceKey) {
  console.error('‚ùå SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
  process.exit(1)
}

const supabase = createClient(url, serviceKey, { auth: { persistSession: false } })

async function checkRealtime() {
  console.log('üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ Realtime –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n')

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ orders –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ orders...')
    const { data: pubTables, error: pubError } = await supabase
      .from('pg_publication_tables')
      .select('*')
      .eq('pubname', 'supabase_realtime')
      .eq('tablename', 'orders')

    if (pubError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é:', pubError.message)
    } else if (pubTables && pubTables.length > 0) {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ orders –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø—É–±–ª–∏–∫–∞—Ü–∏—é supabase_realtime')
    } else {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ orders –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø—É–±–ª–∏–∫–∞—Ü–∏—é')
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º replica identity
    console.log('\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ replica identity...')
    const { data: tables, error: tablesError } = await supabase
      .from('pg_tables')
      .select('replica_identity')
      .eq('tablename', 'orders')
      .eq('schemaname', 'public')

    if (tablesError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å replica identity:', tablesError.message)
    } else if (tables && tables.length > 0) {
      const replicaIdentity = tables[0].replica_identity
      if (replicaIdentity === 'f') {
        console.log('‚úÖ Replica identity —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ FULL')
      } else {
        console.log(`‚ö†Ô∏è Replica identity: ${replicaIdentity} (–æ–∂–∏–¥–∞–µ—Ç—Å—è 'f' –¥–ª—è FULL)`)
      }
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–±–ª–∏—Ü—É orders')
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ tenant_id...')
    const { data: indexes, error: indexError } = await supabase
      .from('pg_indexes')
      .select('indexname')
      .eq('tablename', 'orders')
      .eq('indexname', 'idx_orders_tenant')

    if (indexError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω–¥–µ–∫—Å:', indexError.message)
    } else if (indexes && indexes.length > 0) {
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å idx_orders_tenant —Å–æ–∑–¥–∞–Ω')
    } else {
      console.log('‚ùå –ò–Ω–¥–µ–∫—Å idx_orders_tenant –ù–ï –Ω–∞–π–¥–µ–Ω')
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS
    console.log('\nüîí –ü—Ä–æ–≤–µ—Ä–∫–∞ RLS...')
    const { data: rlsTables, error: rlsError } = await supabase
      .from('pg_tables')
      .select('rowsecurity')
      .eq('tablename', 'orders')
      .eq('schemaname', 'public')

    if (rlsError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å RLS:', rlsError.message)
    } else if (rlsTables && rlsTables.length > 0) {
      const rowSecurity = rlsTables[0].rowsecurity
      if (rowSecurity) {
        console.log('‚úÖ RLS –≤–∫–ª—é—á–µ–Ω –Ω–∞ —Ç–∞–±–ª–∏—Ü–µ orders')
      } else {
        console.log('‚ùå RLS –ù–ï –≤–∫–ª—é—á–µ–Ω –Ω–∞ —Ç–∞–±–ª–∏—Ü–µ orders')
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏
    console.log('\nüõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–∏—Ç–∏–∫...')
    const { data: policies, error: policyError } = await supabase
      .from('pg_policies')
      .select('policyname, cmd')
      .eq('tablename', 'orders')
      .eq('schemaname', 'public')

    if (policyError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏:', policyError.message)
    } else if (policies && policies.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${policies.length} –ø–æ–ª–∏—Ç–∏–∫ –¥–ª—è orders:`)
      policies.forEach((policy) => {
        console.log(`   - ${policy.policyname} (${policy.cmd})`)
      })
    } else {
      console.log('‚ùå –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è orders –ù–ï –Ω–∞–π–¥–µ–Ω—ã')
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—ã...')
    const { error: testError } = await supabase.from('orders').select('id').limit(1)

    if (testError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ orders:', testError.message)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ orders –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è')
    }

    console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ Realtime –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ NEXT_PUBLIC_SUPABASE_URL –∏ NEXT_PUBLIC_SUPABASE_ANON_KEY')
    console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ /realtime-demo –≤ –±—Ä–∞—É–∑–µ—Ä–µ')
    console.log('3. –í–≤–µ–¥–∏—Ç–µ tenant ID –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message)
    process.exit(1)
  }
}

checkRealtime()
